vendor_name = ModelSim
source_file = 1, D:/altera/13.0sp1/final_project/integer_divider.vhd
source_file = 1, D:/altera/13.0sp1/final_project/components/mux.vhd
source_file = 1, D:/altera/13.0sp1/final_project/my_components.vhd
source_file = 1, D:/altera/13.0sp1/final_project/components/is_zero.vhd
source_file = 1, D:/altera/13.0sp1/final_project/components/register.vhd
source_file = 1, D:/altera/13.0sp1/final_project/components/adder.vhd
source_file = 1, D:/altera/13.0sp1/final_project/components/full_adder.vhd
source_file = 1, D:/altera/13.0sp1/final_project/components/inverter.vhd
source_file = 1, D:/altera/13.0sp1/final_project/integer_divider_tb.vhd
source_file = 1, D:/altera/13.0sp1/final_project/test_wv.vwf
source_file = 1, D:/altera/13.0sp1/final_project/db/integer_divider.cbx.xml
source_file = 1, d:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, d:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, d:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, d:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = integer_divider
instance = comp, \RegA|Q[1] , RegA|Q[1], integer_divider, 1
instance = comp, \A[1]~input , A[1]~input, integer_divider, 1
instance = comp, \R[0]~output , R[0]~output, integer_divider, 1
instance = comp, \R[1]~output , R[1]~output, integer_divider, 1
instance = comp, \R[2]~output , R[2]~output, integer_divider, 1
instance = comp, \R[3]~output , R[3]~output, integer_divider, 1
instance = comp, \Q[0]~output , Q[0]~output, integer_divider, 1
instance = comp, \Q[1]~output , Q[1]~output, integer_divider, 1
instance = comp, \Q[2]~output , Q[2]~output, integer_divider, 1
instance = comp, \Q[3]~output , Q[3]~output, integer_divider, 1
instance = comp, \Err~output , Err~output, integer_divider, 1
instance = comp, \Done~output , Done~output, integer_divider, 1
instance = comp, \Clock~input , Clock~input, integer_divider, 1
instance = comp, \Clock~inputclkctrl , Clock~inputclkctrl, integer_divider, 1
instance = comp, \B[0]~input , B[0]~input, integer_divider, 1
instance = comp, \Resetn~input , Resetn~input, integer_divider, 1
instance = comp, \Resetn~inputclkctrl , Resetn~inputclkctrl, integer_divider, 1
instance = comp, \RegB|Q[0] , RegB|Q[0], integer_divider, 1
instance = comp, \A[0]~input , A[0]~input, integer_divider, 1
instance = comp, \RegA|Q[0] , RegA|Q[0], integer_divider, 1
instance = comp, \B[3]~input , B[3]~input, integer_divider, 1
instance = comp, \RegB|Q[3] , RegB|Q[3], integer_divider, 1
instance = comp, \Subtractor|FA_array:3:FA|Cout~1 , Subtractor|\FA_array:3:FA|Cout~1, integer_divider, 1
instance = comp, \B[2]~input , B[2]~input, integer_divider, 1
instance = comp, \RegB|Q[2] , RegB|Q[2], integer_divider, 1
instance = comp, \B[1]~input , B[1]~input, integer_divider, 1
instance = comp, \RegB|Q[1] , RegB|Q[1], integer_divider, 1
instance = comp, \Subtractor|FA_array:1:FA|s~0 , Subtractor|\FA_array:1:FA|s~0, integer_divider, 1
instance = comp, \RMux|X[1]~1 , RMux|X[1]~1, integer_divider, 1
instance = comp, \Selector0~0 , Selector0~0, integer_divider, 1
instance = comp, \y.S0 , y.S0, integer_divider, 1
instance = comp, \Selector3~0 , Selector3~0, integer_divider, 1
instance = comp, \RegR|Q[1] , RegR|Q[1], integer_divider, 1
instance = comp, \Subtractor|FA_array:1:FA|Cout~0 , Subtractor|\FA_array:1:FA|Cout~0, integer_divider, 1
instance = comp, \Subtractor|FA_array:3:FA|Cout~2 , Subtractor|\FA_array:3:FA|Cout~2, integer_divider, 1
instance = comp, \IsZero|ISZERO~0 , IsZero|ISZERO~0, integer_divider, 1
instance = comp, \Selector1~0 , Selector1~0, integer_divider, 1
instance = comp, \Selector1~1 , Selector1~1, integer_divider, 1
instance = comp, \y.S1 , y.S1, integer_divider, 1
instance = comp, \RMux|X[0]~0 , RMux|X[0]~0, integer_divider, 1
instance = comp, \RegR|Q[0] , RegR|Q[0], integer_divider, 1
instance = comp, \A[2]~input , A[2]~input, integer_divider, 1
instance = comp, \RegA|Q[2] , RegA|Q[2], integer_divider, 1
instance = comp, \Subtractor|FA_array:2:FA|s~0 , Subtractor|\FA_array:2:FA|s~0, integer_divider, 1
instance = comp, \RMux|X[2]~2 , RMux|X[2]~2, integer_divider, 1
instance = comp, \RegR|Q[2] , RegR|Q[2], integer_divider, 1
instance = comp, \A[3]~input , A[3]~input, integer_divider, 1
instance = comp, \RegA|Q[3] , RegA|Q[3], integer_divider, 1
instance = comp, \RegR|Q[3]~0 , RegR|Q[3]~0, integer_divider, 1
instance = comp, \RegR|Q[3]~1 , RegR|Q[3]~1, integer_divider, 1
instance = comp, \RegR|Q[3]~2 , RegR|Q[3]~2, integer_divider, 1
instance = comp, \RegR|Q[3] , RegR|Q[3], integer_divider, 1
instance = comp, \QMux|X[0]~0 , QMux|X[0]~0, integer_divider, 1
instance = comp, \RegQ|Q[0] , RegQ|Q[0], integer_divider, 1
instance = comp, \QMux|X[1]~1 , QMux|X[1]~1, integer_divider, 1
instance = comp, \RegQ|Q[1] , RegQ|Q[1], integer_divider, 1
instance = comp, \QMux|X[2]~2 , QMux|X[2]~2, integer_divider, 1
instance = comp, \RegQ|Q[2] , RegQ|Q[2], integer_divider, 1
instance = comp, \QAdder|FA_array:3:FA|s , QAdder|\FA_array:3:FA|s, integer_divider, 1
instance = comp, \QMux|X[3]~3 , QMux|X[3]~3, integer_divider, 1
instance = comp, \RegQ|Q[3] , RegQ|Q[3], integer_divider, 1
instance = comp, \s~input , s~input, integer_divider, 1
instance = comp, \Err~0 , Err~0, integer_divider, 1
instance = comp, \Subtractor|FA_array:3:FA|Cout~0 , Subtractor|\FA_array:3:FA|Cout~0, integer_divider, 1
instance = comp, \Selector2~0 , Selector2~0, integer_divider, 1
instance = comp, \Selector2~1 , Selector2~1, integer_divider, 1
instance = comp, \y.S2 , y.S2, integer_divider, 1
instance = comp, \EA~input , EA~input, integer_divider, 1
instance = comp, \EB~input , EB~input, integer_divider, 1
